{"version":3,"file":"PgMutationProceduresPlugin.js","names":["PgMutationProceduresPlugin","builder","hook","fields","build","context","extend","pgIntrospectionResultsByKind","introspectionResultsByKind","inflection","pgMakeProcField","makeProcField","pgOmit","omit","swallowError","describePgEntity","sqlCommentByAddingTags","scope","isRootMutation","fieldWithHooks","procedure","reduce","memo","proc","isStable","namespace","fieldName","functionMutationName","isMutation","name","e","exports","default"],"sources":["../../src/plugins/PgMutationProceduresPlugin.js"],"sourcesContent":["// @flow\nimport type { Plugin } from \"graphile-build\";\n\nexport default (function PgMutationProceduresPlugin(builder) {\n  builder.hook(\n    \"GraphQLObjectType:fields\",\n    (fields, build, context) => {\n      const {\n        extend,\n        pgIntrospectionResultsByKind: introspectionResultsByKind,\n        inflection,\n        pgMakeProcField: makeProcField,\n        pgOmit: omit,\n        swallowError,\n        describePgEntity,\n        sqlCommentByAddingTags,\n      } = build;\n      const {\n        scope: { isRootMutation },\n        fieldWithHooks,\n      } = context;\n\n      if (!isRootMutation) {\n        return fields;\n      }\n\n      return extend(\n        fields,\n        introspectionResultsByKind.procedure.reduce((memo, proc) => {\n          // PERFORMANCE: These used to be .filter(...) calls\n          if (proc.isStable) return memo;\n          if (!proc.namespace) return memo;\n          if (omit(proc, \"execute\")) return memo;\n\n          const fieldName = inflection.functionMutationName(proc);\n          try {\n            memo = extend(\n              memo,\n              {\n                [fieldName]: makeProcField(fieldName, proc, build, {\n                  fieldWithHooks,\n                  isMutation: true,\n                }),\n              },\n              `Adding mutation field for ${describePgEntity(\n                proc\n              )}. You can rename this field with a 'Smart Comment':\\n\\n  ${sqlCommentByAddingTags(\n                proc,\n                {\n                  name: \"newNameHere\",\n                }\n              )}`\n            );\n          } catch (e) {\n            swallowError(e);\n          }\n          return memo;\n        }, {}),\n        `Adding mutation procedure to root Mutation field`\n      );\n    },\n    [\"PgMutationProcedures\"]\n  );\n}: Plugin);\n"],"mappings":";;;;;;IAGyBA,0BAA0B,GAAnC,SAASA,0BAA0BA,CAACC,OAAO,EAAE;EAC3DA,OAAO,CAACC,IAAI,CACV,0BAA0B,EAC1B,CAACC,MAAM,EAAEC,KAAK,EAAEC,OAAO,KAAK;IAC1B,MAAM;MACJC,MAAM;MACNC,4BAA4B,EAAEC,0BAA0B;MACxDC,UAAU;MACVC,eAAe,EAAEC,aAAa;MAC9BC,MAAM,EAAEC,IAAI;MACZC,YAAY;MACZC,gBAAgB;MAChBC;IACF,CAAC,GAAGZ,KAAK;IACT,MAAM;MACJa,KAAK,EAAE;QAAEC;MAAe,CAAC;MACzBC;IACF,CAAC,GAAGd,OAAO;IAEX,IAAI,CAACa,cAAc,EAAE;MACnB,OAAOf,MAAM;IACf;IAEA,OAAOG,MAAM,CACXH,MAAM,EACNK,0BAA0B,CAACY,SAAS,CAACC,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAK;MAC1D;MACA,IAAIA,IAAI,CAACC,QAAQ,EAAE,OAAOF,IAAI;MAC9B,IAAI,CAACC,IAAI,CAACE,SAAS,EAAE,OAAOH,IAAI;MAChC,IAAIT,IAAI,CAACU,IAAI,EAAE,SAAS,CAAC,EAAE,OAAOD,IAAI;MAEtC,MAAMI,SAAS,GAAGjB,UAAU,CAACkB,oBAAoB,CAACJ,IAAI,CAAC;MACvD,IAAI;QACFD,IAAI,GAAGhB,MAAM,CACXgB,IAAI,EACJ;UACE,CAACI,SAAS,GAAGf,aAAa,CAACe,SAAS,EAAEH,IAAI,EAAEnB,KAAK,EAAE;YACjDe,cAAc;YACdS,UAAU,EAAE;UACd,CAAC;QACH,CAAC,EACA,6BAA4Bb,gBAAgB,CAC3CQ,IACF,CAAE,4DAA2DP,sBAAsB,CACjFO,IAAI,EACJ;UACEM,IAAI,EAAE;QACR,CACF,CAAE,EACJ,CAAC;MACH,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVhB,YAAY,CAACgB,CAAC,CAAC;MACjB;MACA,OAAOR,IAAI;IACb,CAAC,EAAE,CAAC,CAAC,CAAC,EACL,kDACH,CAAC;EACH,CAAC,EACD,CAAC,sBAAsB,CACzB,CAAC;AACH,CAAC;AAAAS,OAAA,CAAAC,OAAA,GAAAhC,0BAAA"}