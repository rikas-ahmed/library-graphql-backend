{"version":3,"file":"PgComputedColumnsPlugin.js","names":["getComputedColumnDetails","build","table","proc","isStable","namespaceId","name","startsWith","argTypeIds","length","type","id","argTypes","reduce","prev","typeId","idx","argModes","push","pgIntrospectionResultsByKind","typeById","slice","some","class","isSelectable","pseudoColumnName","exports","PgComputedColumnsPlugin","builder","pgSimpleCollections","hook","fields","context","scope","isPgRowType","isPgCompoundType","isInputType","pgIntrospection","fieldWithHooks","Self","kind","namespace","extend","introspectionResultsByKind","inflection","pgOmit","omit","pgMakeProcField","makeProcField","swallowError","describePgEntity","sqlCommentByAddingTags","tableType","Error","procedure","memo","computedColumnDetails","makeField","forceList","fieldName","computedColumnList","computedColumn","computed","e","simpleCollections","tags","hasConnections","hasSimpleCollections","returnsSet","default"],"sources":["../../src/plugins/PgComputedColumnsPlugin.js"],"sourcesContent":["// @flow\nimport type { Plugin, Build } from \"graphile-build\";\nimport type { PgClass, PgProc } from \"./PgIntrospectionPlugin\";\n\nexport const getComputedColumnDetails = (\n  build: Build,\n  table: PgClass,\n  proc: PgProc\n) => {\n  if (!proc.isStable) return null;\n  if (proc.namespaceId !== table.namespaceId) return null;\n  if (!proc.name.startsWith(`${table.name}_`)) return null;\n  if (proc.argTypeIds.length < 1) return null;\n  if (proc.argTypeIds[0] !== table.type.id) return null;\n\n  const argTypes = proc.argTypeIds.reduce((prev, typeId, idx) => {\n    if (\n      proc.argModes.length === 0 || // all args are `in`\n      proc.argModes[idx] === \"i\" || // this arg is `in`\n      proc.argModes[idx] === \"b\" // this arg is `inout`\n    ) {\n      prev.push(build.pgIntrospectionResultsByKind.typeById[typeId]);\n    }\n    return prev;\n  }, []);\n  if (\n    argTypes\n      .slice(1)\n      .some(type => type.type === \"c\" && type.class && type.class.isSelectable)\n  ) {\n    // Accepts two input tables? Skip.\n    return null;\n  }\n\n  const pseudoColumnName = proc.name.slice(table.name.length + 1);\n  return { argTypes, pseudoColumnName };\n};\n\nexport default (function PgComputedColumnsPlugin(\n  builder,\n  { pgSimpleCollections }\n) {\n  builder.hook(\n    \"GraphQLObjectType:fields\",\n    (fields, build, context) => {\n      const {\n        scope: {\n          isPgRowType,\n          isPgCompoundType,\n          isInputType,\n          pgIntrospection: table,\n        },\n        fieldWithHooks,\n        Self,\n      } = context;\n\n      if (\n        isInputType ||\n        !(isPgRowType || isPgCompoundType) ||\n        !table ||\n        table.kind !== \"class\" ||\n        !table.namespace\n      ) {\n        return fields;\n      }\n\n      const {\n        extend,\n        pgIntrospectionResultsByKind: introspectionResultsByKind,\n        inflection,\n        pgOmit: omit,\n        pgMakeProcField: makeProcField,\n        swallowError,\n        describePgEntity,\n        sqlCommentByAddingTags,\n      } = build;\n      const tableType = table.type;\n      if (!tableType) {\n        throw new Error(\"Could not determine the type for this table\");\n      }\n      return extend(\n        fields,\n        introspectionResultsByKind.procedure.reduce((memo, proc) => {\n          if (omit(proc, \"execute\")) return memo;\n          const computedColumnDetails = getComputedColumnDetails(\n            build,\n            table,\n            proc\n          );\n          if (!computedColumnDetails) return memo;\n          const { pseudoColumnName } = computedColumnDetails;\n          function makeField(forceList) {\n            const fieldName = forceList\n              ? inflection.computedColumnList(pseudoColumnName, proc, table)\n              : inflection.computedColumn(pseudoColumnName, proc, table);\n            try {\n              memo = extend(\n                memo,\n                {\n                  [fieldName]: makeProcField(fieldName, proc, build, {\n                    fieldWithHooks,\n                    computed: true,\n                    forceList,\n                  }),\n                },\n                `Adding computed column for ${describePgEntity(\n                  proc\n                )}. You can rename this field with a 'Smart Comment':\\n\\n  ${sqlCommentByAddingTags(\n                  proc,\n                  {\n                    fieldName: \"newNameHere\",\n                  }\n                )}`\n              );\n            } catch (e) {\n              swallowError(e);\n            }\n          }\n          const simpleCollections =\n            proc.tags.simpleCollections || pgSimpleCollections;\n          const hasConnections = simpleCollections !== \"only\";\n          const hasSimpleCollections =\n            simpleCollections === \"only\" || simpleCollections === \"both\";\n          if (!proc.returnsSet || hasConnections) {\n            makeField(false);\n          }\n          if (proc.returnsSet && hasSimpleCollections) {\n            makeField(true);\n          }\n          return memo;\n        }, {}),\n        `Adding computed column to '${Self.name}'`\n      );\n    },\n    [\"PgComputedColumns\"]\n  );\n}: Plugin);\n"],"mappings":";;;;;;AAIO,MAAMA,wBAAwB,GAAGA,CACtCC,KAAY,EACZC,KAAc,EACdC,IAAY,KACT;EACH,IAAI,CAACA,IAAI,CAACC,QAAQ,EAAE,OAAO,IAAI;EAC/B,IAAID,IAAI,CAACE,WAAW,KAAKH,KAAK,CAACG,WAAW,EAAE,OAAO,IAAI;EACvD,IAAI,CAACF,IAAI,CAACG,IAAI,CAACC,UAAU,CAAE,GAAEL,KAAK,CAACI,IAAK,GAAE,CAAC,EAAE,OAAO,IAAI;EACxD,IAAIH,IAAI,CAACK,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE,OAAO,IAAI;EAC3C,IAAIN,IAAI,CAACK,UAAU,CAAC,CAAC,CAAC,KAAKN,KAAK,CAACQ,IAAI,CAACC,EAAE,EAAE,OAAO,IAAI;EAErD,MAAMC,QAAQ,GAAGT,IAAI,CAACK,UAAU,CAACK,MAAM,CAAC,CAACC,IAAI,EAAEC,MAAM,EAAEC,GAAG,KAAK;IAC7D,IACEb,IAAI,CAACc,QAAQ,CAACR,MAAM,KAAK,CAAC;IAAI;IAC9BN,IAAI,CAACc,QAAQ,CAACD,GAAG,CAAC,KAAK,GAAG;IAAI;IAC9Bb,IAAI,CAACc,QAAQ,CAACD,GAAG,CAAC,KAAK,GAAG,CAAC;IAAA,EAC3B;MACAF,IAAI,CAACI,IAAI,CAACjB,KAAK,CAACkB,4BAA4B,CAACC,QAAQ,CAACL,MAAM,CAAC,CAAC;IAChE;IACA,OAAOD,IAAI;EACb,CAAC,EAAE,EAAE,CAAC;EACN,IACEF,QAAQ,CACLS,KAAK,CAAC,CAAC,CAAC,CACRC,IAAI,CAACZ,IAAI,IAAIA,IAAI,CAACA,IAAI,KAAK,GAAG,IAAIA,IAAI,CAACa,KAAK,IAAIb,IAAI,CAACa,KAAK,CAACC,YAAY,CAAC,EAC3E;IACA;IACA,OAAO,IAAI;EACb;EAEA,MAAMC,gBAAgB,GAAGtB,IAAI,CAACG,IAAI,CAACe,KAAK,CAACnB,KAAK,CAACI,IAAI,CAACG,MAAM,GAAG,CAAC,CAAC;EAC/D,OAAO;IAAEG,QAAQ;IAAEa;EAAiB,CAAC;AACvC,CAAC;AAACC,OAAA,CAAA1B,wBAAA,GAAAA,wBAAA;AAAA,IAEuB2B,uBAAuB,GAAhC,SAASA,uBAAuBA,CAC9CC,OAAO,EACP;EAAEC;AAAoB,CAAC,EACvB;EACAD,OAAO,CAACE,IAAI,CACV,0BAA0B,EAC1B,CAACC,MAAM,EAAE9B,KAAK,EAAE+B,OAAO,KAAK;IAC1B,MAAM;MACJC,KAAK,EAAE;QACLC,WAAW;QACXC,gBAAgB;QAChBC,WAAW;QACXC,eAAe,EAAEnC;MACnB,CAAC;MACDoC,cAAc;MACdC;IACF,CAAC,GAAGP,OAAO;IAEX,IACEI,WAAW,IACX,EAAEF,WAAW,IAAIC,gBAAgB,CAAC,IAClC,CAACjC,KAAK,IACNA,KAAK,CAACsC,IAAI,KAAK,OAAO,IACtB,CAACtC,KAAK,CAACuC,SAAS,EAChB;MACA,OAAOV,MAAM;IACf;IAEA,MAAM;MACJW,MAAM;MACNvB,4BAA4B,EAAEwB,0BAA0B;MACxDC,UAAU;MACVC,MAAM,EAAEC,IAAI;MACZC,eAAe,EAAEC,aAAa;MAC9BC,YAAY;MACZC,gBAAgB;MAChBC;IACF,CAAC,GAAGlD,KAAK;IACT,MAAMmD,SAAS,GAAGlD,KAAK,CAACQ,IAAI;IAC5B,IAAI,CAAC0C,SAAS,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;IAChE;IACA,OAAOX,MAAM,CACXX,MAAM,EACNY,0BAA0B,CAACW,SAAS,CAACzC,MAAM,CAAC,CAAC0C,IAAI,EAAEpD,IAAI,KAAK;MAC1D,IAAI2C,IAAI,CAAC3C,IAAI,EAAE,SAAS,CAAC,EAAE,OAAOoD,IAAI;MACtC,MAAMC,qBAAqB,GAAGxD,wBAAwB,CACpDC,KAAK,EACLC,KAAK,EACLC,IACF,CAAC;MACD,IAAI,CAACqD,qBAAqB,EAAE,OAAOD,IAAI;MACvC,MAAM;QAAE9B;MAAiB,CAAC,GAAG+B,qBAAqB;MAClD,SAASC,SAASA,CAACC,SAAS,EAAE;QAC5B,MAAMC,SAAS,GAAGD,SAAS,GACvBd,UAAU,CAACgB,kBAAkB,CAACnC,gBAAgB,EAAEtB,IAAI,EAAED,KAAK,CAAC,GAC5D0C,UAAU,CAACiB,cAAc,CAACpC,gBAAgB,EAAEtB,IAAI,EAAED,KAAK,CAAC;QAC5D,IAAI;UACFqD,IAAI,GAAGb,MAAM,CACXa,IAAI,EACJ;YACE,CAACI,SAAS,GAAGX,aAAa,CAACW,SAAS,EAAExD,IAAI,EAAEF,KAAK,EAAE;cACjDqC,cAAc;cACdwB,QAAQ,EAAE,IAAI;cACdJ;YACF,CAAC;UACH,CAAC,EACA,8BAA6BR,gBAAgB,CAC5C/C,IACF,CAAE,4DAA2DgD,sBAAsB,CACjFhD,IAAI,EACJ;YACEwD,SAAS,EAAE;UACb,CACF,CAAE,EACJ,CAAC;QACH,CAAC,CAAC,OAAOI,CAAC,EAAE;UACVd,YAAY,CAACc,CAAC,CAAC;QACjB;MACF;MACA,MAAMC,iBAAiB,GACrB7D,IAAI,CAAC8D,IAAI,CAACD,iBAAiB,IAAInC,mBAAmB;MACpD,MAAMqC,cAAc,GAAGF,iBAAiB,KAAK,MAAM;MACnD,MAAMG,oBAAoB,GACxBH,iBAAiB,KAAK,MAAM,IAAIA,iBAAiB,KAAK,MAAM;MAC9D,IAAI,CAAC7D,IAAI,CAACiE,UAAU,IAAIF,cAAc,EAAE;QACtCT,SAAS,CAAC,KAAK,CAAC;MAClB;MACA,IAAItD,IAAI,CAACiE,UAAU,IAAID,oBAAoB,EAAE;QAC3CV,SAAS,CAAC,IAAI,CAAC;MACjB;MACA,OAAOF,IAAI;IACb,CAAC,EAAE,CAAC,CAAC,CAAC,EACL,8BAA6BhB,IAAI,CAACjC,IAAK,GAC1C,CAAC;EACH,CAAC,EACD,CAAC,mBAAmB,CACtB,CAAC;AACH,CAAC;AAAAoB,OAAA,CAAA2C,OAAA,GAAA1C,uBAAA"}