{"version":3,"file":"PgQueryProceduresPlugin.js","names":["PgQueryProceduresPlugin","builder","pgSimpleCollections","disableIssue641Fix","hook","fields","build","context","extend","inflection","pgIntrospectionResultsByKind","introspectionResultsByKind","pgMakeProcField","makeProcField","pgOmit","omit","describePgEntity","sqlCommentByAddingTags","swallowError","scope","isRootQuery","fieldWithHooks","procedure","reduce","memo","proc","isStable","namespace","argTypes","argTypeIds","prev","typeId","idx","argModes","length","push","typeById","some","type","class","isSelectable","firstArgType","namespaceId","name","startsWith","makeField","forceList","fieldName","functionQueryNameList","functionQueryName","e","simpleCollections","tags","hasConnections","hasSimpleCollections","returnsSet","exports","default"],"sources":["../../src/plugins/PgQueryProceduresPlugin.js"],"sourcesContent":["// @flow\nimport type { Plugin } from \"graphile-build\";\n\nexport default (function PgQueryProceduresPlugin(\n  builder,\n  { pgSimpleCollections, disableIssue641Fix = false }\n) {\n  builder.hook(\n    \"GraphQLObjectType:fields\",\n    (fields, build, context) => {\n      const {\n        extend,\n        inflection,\n        pgIntrospectionResultsByKind: introspectionResultsByKind,\n        pgMakeProcField: makeProcField,\n        pgOmit: omit,\n        describePgEntity,\n        sqlCommentByAddingTags,\n        swallowError,\n      } = build;\n      const {\n        scope: { isRootQuery },\n        fieldWithHooks,\n      } = context;\n\n      if (!isRootQuery) {\n        return fields;\n      }\n\n      return extend(\n        fields,\n        introspectionResultsByKind.procedure.reduce((memo, proc) => {\n          // PERFORMANCE: These used to be .filter(...) calls\n          if (!proc.isStable) return memo;\n          if (!proc.namespace) return memo;\n          if (omit(proc, \"execute\")) return memo;\n\n          const argTypes = proc.argTypeIds.reduce((prev, typeId, idx) => {\n            if (\n              proc.argModes.length === 0 || // all args are `in`\n              proc.argModes[idx] === \"i\" || // this arg is `in`\n              proc.argModes[idx] === \"b\" // this arg is `inout`\n            ) {\n              prev.push(introspectionResultsByKind.typeById[typeId]);\n            }\n            return prev;\n          }, []);\n          if (\n            argTypes.some(\n              type => type.type === \"c\" && type.class && type.class.isSelectable\n            )\n          ) {\n            // Selects a table, ignore!\n            return memo;\n          }\n          const firstArgType = argTypes[0];\n          if (\n            firstArgType &&\n            firstArgType.type === \"c\" &&\n            firstArgType.class &&\n            firstArgType.namespaceId === proc.namespaceId &&\n            proc.name.startsWith(`${firstArgType.name}_`)\n          ) {\n            // It's a computed field, skip\n            return memo;\n          }\n\n          function makeField(forceList) {\n            const fieldName = forceList\n              ? inflection.functionQueryNameList(proc)\n              : inflection.functionQueryName(proc);\n            try {\n              memo = extend(\n                memo,\n                {\n                  [fieldName]: makeProcField(fieldName, proc, build, {\n                    fieldWithHooks,\n                    forceList,\n                    isRootQuery: !disableIssue641Fix,\n                  }),\n                },\n                `Adding query field for ${describePgEntity(\n                  proc\n                )}. You can rename this field with a 'Smart Comment':\\n\\n  ${sqlCommentByAddingTags(\n                  proc,\n                  {\n                    name: \"newNameHere\",\n                  }\n                )}`\n              );\n            } catch (e) {\n              swallowError(e);\n            }\n          }\n          const simpleCollections =\n            proc.tags.simpleCollections || pgSimpleCollections;\n          const hasConnections = simpleCollections !== \"only\";\n          const hasSimpleCollections =\n            simpleCollections === \"only\" || simpleCollections === \"both\";\n          if (!proc.returnsSet || hasConnections) {\n            makeField(false);\n          }\n          if (proc.returnsSet && hasSimpleCollections) {\n            makeField(true);\n          }\n          return memo;\n        }, {}),\n        `Adding query procedures to root Query type`\n      );\n    },\n    [\"PgQueryProcedures\"]\n  );\n}: Plugin);\n"],"mappings":"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"}