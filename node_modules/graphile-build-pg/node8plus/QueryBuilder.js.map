{"version":3,"file":"QueryBuilder.js","names":["sql","_interopRequireWildcard","require","_isSafeInteger","_interopRequireDefault","_chunk","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","isDev","process","env","POSTGRAPHILE_ENV","callIfNecessary","o","context","callIfNecessaryArray","Array","isArray","map","v","escapeLarge","sqlFragment","type","actualType","domainBaseType","category","includes","id","fragment","QueryBuilder","constructor","options","rootValue","supportsJSONB","locks","cursorComparator","fixedSelectExpression","select","selectCursor","from","join","whereBound","where","orderBy","orderIsUnique","first","last","limit","offset","finalized","selectedIdentifiers","data","cursorPrefix","lower","upper","beforeLock","liveConditions","compiledData","_children","Map","lock","lockContext","freeze","queryBuilder","jsonbBuildObject","fields","length","fieldsChunks","chunk","chunkToJson","fieldsChunk","expr","alias","literal","field","fn","checkLock","push","makeLiveCollection","table","cb","checkerGenerator","checkers","record","every","checker","parentQueryBuilder","Error","allRequirements","reduce","memo","_checkerGenerator","requirements","assign","value","keys","addLiveCondition","setCursorComparator","addCursorCondition","cursorValue","isAfter","exprGen","test","selectIdentifiers","primaryKey","primaryKeyConstraint","primaryKeys","keyAttributes","getTableAlias","identifier","name","Symbol","isLower","setOrderIsUnique","ascending","nullsFirst","limitGen","offsetGen","previous","isOrderUnique","getTableExpression","getSelectCursor","getOffset","getFinalLimitAndOffset","flip","Math","min","getFinalOffset","getFinalLimit","getOrderByExpressionsAndDirections","getSelectFieldsCount","lockEverything","buildSelectFields","buildSelectJson","addNullCase","addNotDistinctFromNullCase","buildObject","buildWhereBoundClause","clauses","buildWhereClause","includeLowerBound","includeUpperBound","build","asJson","asJsonAggregate","onlyJsonField","useAsterisk","Number","isSafeInteger","flipAlias","aggAlias","_finalize","i","l","stack","seenFields","selects","valueOrGenerator","columnName","a","b","c","f","replace","buildChild","child","buildNamedChildSelecting","selectExpression","toString","getNamedChild","_default","exports"],"sources":["../src/QueryBuilder.js"],"sourcesContent":["// @flow\nimport * as sql from \"pg-sql2\";\nimport type { SQL } from \"pg-sql2\";\nimport isSafeInteger from \"lodash/isSafeInteger\";\nimport chunk from \"lodash/chunk\";\nimport type { PgClass, PgType } from \"./plugins/PgIntrospectionPlugin\";\n\n// eslint-disable-next-line flowtype/no-weak-types\ntype GraphQLContext = any;\n\nconst isDev = process.env.POSTGRAPHILE_ENV === \"development\";\n\ntype GenContext = {\n  queryBuilder: QueryBuilder,\n};\ntype Gen<T> = (context: GenContext) => T;\n\n// Importantly, this cannot include a function\ntype CallResult = null | string | number | boolean | SQL;\n\nfunction callIfNecessary<T: CallResult>(o: Gen<T> | T, context: GenContext): T {\n  if (typeof o === \"function\") {\n    return o(context);\n  } else {\n    return o;\n  }\n}\n\nfunction callIfNecessaryArray<T: CallResult>(\n  o: Array<Gen<T> | T>,\n  context: GenContext\n): Array<T> {\n  if (Array.isArray(o)) {\n    return o.map(v => callIfNecessary(v, context));\n  } else {\n    return o;\n  }\n}\n\nexport type RawAlias = Symbol | string;\ntype SQLAlias = SQL;\ntype SQLGen = Gen<SQL> | SQL;\ntype NumberGen = Gen<number> | number;\ntype CursorValue = Array<mixed>;\ntype CursorComparator = (val: CursorValue, isAfter: boolean) => void;\n\nexport type QueryBuilderOptions = {\n  supportsJSONB?: boolean, // Defaults to true\n};\n\nfunction escapeLarge(sqlFragment: SQL, type: PgType) {\n  const actualType = type.domainBaseType || type;\n  if (actualType.category === \"N\") {\n    if (\n      [\n        \"21\" /* int2 */,\n        \"23\" /* int4 */,\n        \"700\" /* float4 */,\n        \"701\" /* float8 */,\n        \"24\" /* regproc */,\n        \"2202\" /* regprocedure */,\n        \"2203\" /* regoper */,\n        \"2204\" /* regoperator */,\n        \"2205\" /* regclass */,\n        \"2206\" /* regtype */,\n        \"4096\" /* regrole */,\n        \"4089\" /* regnamespace */,\n        \"3734\" /* regconfig */,\n        \"3769\" /* regdictionary */,\n      ].includes(actualType.id)\n    ) {\n      // No need for special handling\n      return sqlFragment;\n    }\n    // Otherwise force the id to be a string\n    return sql.fragment`((${sqlFragment})::numeric)::text`;\n  }\n  return sqlFragment;\n}\n\nclass QueryBuilder {\n  parentQueryBuilder: QueryBuilder | void;\n  context: GraphQLContext;\n  rootValue: any; // eslint-disable-line flowtype/no-weak-types\n  supportsJSONB: boolean;\n  locks: {\n    [string]: false | true | string,\n  };\n  finalized: boolean;\n  selectedIdentifiers: boolean;\n  data: {\n    cursorPrefix: Array<string>,\n    fixedSelectExpression: ?SQLGen,\n    select: Array<[SQLGen, RawAlias]>,\n    selectCursor: ?SQLGen,\n    from: ?[SQLGen, SQLAlias],\n    join: Array<SQLGen>,\n    where: Array<SQLGen>,\n    whereBound: {\n      lower: Array<SQLGen>,\n      upper: Array<SQLGen>,\n    },\n    orderBy: Array<[SQLGen, boolean, boolean | null]>,\n    orderIsUnique: boolean,\n    limit: ?NumberGen,\n    offset: ?NumberGen,\n    first: ?number,\n    last: ?number,\n    beforeLock: {\n      [string]: Array<() => void> | null,\n    },\n    cursorComparator: ?CursorComparator,\n    liveConditions: Array<\n      // eslint-disable-next-line flowtype/no-weak-types\n      [(data: {}) => (record: any) => boolean, { [key: string]: SQL } | void]\n    >,\n  };\n  compiledData: {\n    cursorPrefix: Array<string>,\n    fixedSelectExpression: ?SQL,\n    select: Array<[SQL, RawAlias]>,\n    selectCursor: ?SQL,\n    from: ?[SQL, SQLAlias],\n    join: Array<SQL>,\n    where: Array<SQL>,\n    whereBound: {\n      lower: Array<SQL>,\n      upper: Array<SQL>,\n    },\n    orderBy: Array<[SQL, boolean, boolean | null]>,\n    orderIsUnique: boolean,\n    limit: ?number,\n    offset: ?number,\n    first: ?number,\n    last: ?number,\n    cursorComparator: ?CursorComparator,\n  };\n  lockContext: {\n    queryBuilder: QueryBuilder,\n  };\n  _children: Map<RawAlias, QueryBuilder>;\n\n  constructor(\n    options: QueryBuilderOptions = {},\n    context: GraphQLContext = {},\n    rootValue?: any // eslint-disable-line flowtype/no-weak-types\n  ) {\n    this.context = context || {};\n    this.rootValue = rootValue;\n    this.supportsJSONB =\n      typeof options.supportsJSONB === \"undefined\" ||\n      options.supportsJSONB === null\n        ? true\n        : !!options.supportsJSONB;\n\n    this.locks = {\n      // As a performance optimisation, we're going to list a number of lock\n      // types so that V8 doesn't need to mutate the object too much\n      cursorComparator: false,\n      fixedSelectExpression: false,\n      select: false,\n      selectCursor: false,\n      from: false,\n      join: false,\n      whereBound: false,\n      where: false,\n      orderBy: false,\n      orderIsUnique: false,\n      first: false,\n      last: false,\n      limit: false,\n      offset: false,\n    };\n    this.finalized = false;\n    this.selectedIdentifiers = false;\n    this.data = {\n      // TODO: refactor `cursorPrefix`, it shouldn't be here (or should at least have getters/setters)\n      cursorPrefix: [\"natural\"],\n      fixedSelectExpression: null,\n      select: [],\n      selectCursor: null,\n      from: null,\n      join: [],\n      where: [],\n      whereBound: {\n        lower: [],\n        upper: [],\n      },\n      orderBy: [],\n      orderIsUnique: false,\n      limit: null,\n      offset: null,\n      first: null,\n      last: null,\n      beforeLock: {\n        // As a performance optimisation, we're going to list a number of lock\n        // types so that V8 doesn't need to mutate the object too much\n        cursorComparator: [],\n        fixedSelectExpression: [],\n        select: [],\n        selectCursor: [],\n        from: [],\n        join: [],\n        whereBound: [],\n        where: [],\n        orderBy: [],\n        orderIsUnique: [],\n        first: [],\n        last: [],\n        limit: [],\n        offset: [],\n      },\n      cursorComparator: null,\n      liveConditions: [],\n    };\n    this.compiledData = {\n      cursorPrefix: [\"natural\"],\n      fixedSelectExpression: null,\n      select: [],\n      selectCursor: null,\n      from: null,\n      join: [],\n      where: [],\n      whereBound: {\n        lower: [],\n        upper: [],\n      },\n      orderBy: [],\n      orderIsUnique: false,\n      limit: null,\n      offset: null,\n      first: null,\n      last: null,\n      cursorComparator: null,\n    };\n    this._children = new Map();\n    this.beforeLock(\"select\", () => {\n      this.lock(\"selectCursor\");\n      if (this.compiledData.selectCursor) {\n        this.select(this.compiledData.selectCursor, \"__cursor\");\n      }\n    });\n    // 'whereBound' and 'natural' order might set offset/limit\n    this.beforeLock(\"where\", () => {\n      this.lock(\"whereBound\");\n    });\n    this.beforeLock(\"offset\", () => {\n      this.lock(\"whereBound\");\n    });\n    this.beforeLock(\"limit\", () => {\n      this.lock(\"whereBound\");\n    });\n    this.beforeLock(\"first\", () => {\n      this.lock(\"limit\");\n      this.lock(\"offset\");\n    });\n    this.beforeLock(\"last\", () => {\n      this.lock(\"limit\");\n      this.lock(\"offset\");\n    });\n    this.lockContext = Object.freeze({\n      queryBuilder: this,\n    });\n  }\n\n  // ----------------------------------------\n\n  // Helper function\n  jsonbBuildObject(fields: Array<[SQL, RawAlias]>) {\n    if (this.supportsJSONB && fields.length > 50) {\n      const fieldsChunks = chunk(fields, 50);\n      const chunkToJson = fieldsChunk =>\n        sql.fragment`jsonb_build_object(${sql.join(\n          fieldsChunk.map(\n            ([expr, alias]) =>\n              sql.fragment`${sql.literal(alias)}::text, ${expr}`\n          ),\n          \", \"\n        )})`;\n      return sql.fragment`(${sql.join(\n        fieldsChunks.map(chunkToJson),\n        \" || \"\n      )})::json`;\n    } else {\n      // PG9.4 will have issues with more than 100 parameters (50 keys)\n      return sql.fragment`json_build_object(${sql.join(\n        fields.map(\n          ([expr, alias]) => sql.fragment`${sql.literal(alias)}::text, ${expr}`\n        ),\n        \", \"\n      )})`;\n    }\n  }\n\n  // ----------------------------------------\n\n  beforeLock(field: string, fn: () => void) {\n    this.checkLock(field);\n    if (!this.data.beforeLock[field]) {\n      this.data.beforeLock[field] = [];\n    }\n    // $FlowFixMe: this is guaranteed to be set, due to the if statement above\n    this.data.beforeLock[field].push(fn);\n  }\n\n  makeLiveCollection(\n    table: PgClass,\n    // eslint-disable-next-line flowtype/no-weak-types\n    cb?: (checker: (data: any) => (record: any) => boolean) => void\n  ) {\n    /* the actual condition doesn't matter hugely, 'select' should work */\n    if (!this.rootValue || !this.rootValue.liveConditions) return;\n    const liveConditions = this.data.liveConditions;\n    const checkerGenerator = data => {\n      // Compute this once.\n      const checkers = liveConditions.map(([checkerGenerator]) =>\n        checkerGenerator(data)\n      );\n      return record => checkers.every(checker => checker(record));\n    };\n    if (this.parentQueryBuilder) {\n      const parentQueryBuilder = this.parentQueryBuilder;\n      if (cb) {\n        throw new Error(\n          \"Either use parentQueryBuilder or pass callback, not both.\"\n        );\n      }\n      parentQueryBuilder.beforeLock(\"select\", () => {\n        const id = this.rootValue.liveConditions.push(checkerGenerator) - 1;\n        // BEWARE: it's easy to override others' conditions, and that will cause issues. Be sensible.\n        const allRequirements = this.data.liveConditions.reduce(\n          (memo, [_checkerGenerator, requirements]) =>\n            requirements ? Object.assign(memo, requirements) : memo,\n          {}\n        );\n        parentQueryBuilder.select(\n          sql.fragment`\\\njson_build_object('__id', ${sql.value(id)}::int\n${sql.join(\n  Object.keys(allRequirements).map(\n    key => sql.fragment`, ${sql.literal(key)}::text, ${allRequirements[key]}`\n  ),\n  \"\"\n)})`,\n          \"__live\"\n        );\n      });\n    } else if (cb) {\n      cb(checkerGenerator);\n    } else {\n      throw new Error(\n        \"makeLiveCollection was called without parentQueryBuilder and without callback\"\n      );\n    }\n  }\n\n  addLiveCondition(\n    // eslint-disable-next-line flowtype/no-weak-types\n    checkerGenerator: (data: {}) => (record: any) => boolean,\n    requirements?: { [key: string]: SQL }\n  ) {\n    if (requirements && !this.parentQueryBuilder) {\n      throw new Error(\n        \"There's no parentQueryBuilder, so there cannot be requirements\"\n      );\n    }\n    this.data.liveConditions.push([checkerGenerator, requirements]);\n  }\n\n  setCursorComparator(fn: CursorComparator) {\n    this.checkLock(\"cursorComparator\");\n    this.data.cursorComparator = fn;\n    this.lock(\"cursorComparator\");\n  }\n  addCursorCondition(cursorValue: CursorValue, isAfter: boolean) {\n    this.beforeLock(\"whereBound\", () => {\n      this.lock(\"cursorComparator\");\n      if (!this.compiledData.cursorComparator) {\n        throw new Error(\"No cursor comparator was set!\");\n      }\n      this.compiledData.cursorComparator(cursorValue, isAfter);\n    });\n  }\n  /** this method is experimental */\n  fixedSelectExpression(exprGen: SQLGen) {\n    this.checkLock(\"fixedSelectExpression\");\n    this.lock(\"select\");\n    this.lock(\"selectCursor\");\n    if (this.data.select.length > 0) {\n      throw new Error(\"Cannot use .fixedSelectExpression() with .select()\");\n    }\n    if (this.data.selectCursor) {\n      throw new Error(\n        \"Cannot use .fixedSelectExpression() with .selectCursor()\"\n      );\n    }\n    this.data.fixedSelectExpression = exprGen;\n  }\n  select(exprGen: SQLGen, alias: RawAlias) {\n    this.checkLock(\"select\");\n    this.lock(\"fixedSelectExpression\");\n    if (typeof alias === \"string\") {\n      // To protect against vulnerabilities such as\n      //\n      // https://github.com/brianc/node-postgres/issues/1408\n      //\n      // we need to ensure column names are safe. Turns out that GraphQL\n      // aliases are fairly strict (`[_A-Za-z][_0-9A-Za-z]*`) anyway:\n      //\n      // https://github.com/graphql/graphql-js/blob/680685dd14bd52c6475305e150e5f295ead2aa7e/src/language/lexer.js#L551-L581\n      //\n      // so this should not cause any issues in practice.\n      if (/^(\\$+|@+|[_A-Za-z])[_0-9A-Za-z]*$/.test(alias) !== true) {\n        throw new Error(`Disallowed alias '${alias}'.`);\n      }\n    }\n    this.data.select.push([exprGen, alias]);\n  }\n  selectIdentifiers(table: PgClass) {\n    if (this.selectedIdentifiers) return;\n    const primaryKey = table.primaryKeyConstraint;\n    if (!primaryKey) return;\n    const primaryKeys = primaryKey.keyAttributes;\n    this.select(\n      sql.fragment`json_build_array(${sql.join(\n        primaryKeys.map(key =>\n          escapeLarge(\n            sql.fragment`${this.getTableAlias()}.${sql.identifier(key.name)}`,\n            key.type\n          )\n        ),\n        \", \"\n      )})`,\n      \"__identifiers\"\n    );\n    this.selectedIdentifiers = true;\n  }\n  selectCursor(exprGen: SQLGen) {\n    this.checkLock(\"selectCursor\");\n    this.lock(\"fixedSelectExpression\");\n    this.data.selectCursor = exprGen;\n  }\n  from(expr: SQLGen, alias?: SQLAlias = sql.identifier(Symbol())) {\n    this.checkLock(\"from\");\n    if (!expr) {\n      throw new Error(\"No from table source!\");\n    }\n    if (!alias) {\n      throw new Error(\"No from alias!\");\n    }\n    this.data.from = [expr, alias];\n    this.lock(\"from\");\n  }\n  // XXX: join\n  where(exprGen: SQLGen) {\n    this.checkLock(\"where\");\n    this.data.where.push(exprGen);\n  }\n  whereBound(exprGen: SQLGen, isLower: boolean) {\n    if (typeof isLower !== \"boolean\") {\n      throw new Error(\"isLower must be specified as a boolean\");\n    }\n    this.checkLock(\"whereBound\");\n    this.data.whereBound[isLower ? \"lower\" : \"upper\"].push(exprGen);\n  }\n  setOrderIsUnique() {\n    this.data.orderIsUnique = true;\n  }\n  orderBy(\n    exprGen: SQLGen,\n    ascending: boolean = true,\n    nullsFirst: boolean | null = null\n  ) {\n    this.checkLock(\"orderBy\");\n    this.data.orderBy.push([exprGen, ascending, nullsFirst]);\n  }\n  limit(limitGen: NumberGen) {\n    this.checkLock(\"limit\");\n\n    if (this.data.limit != null) {\n      throw new Error(\"Must only set limit once\");\n    }\n    this.data.limit = limitGen;\n  }\n  offset(offsetGen: NumberGen) {\n    this.checkLock(\"offset\");\n    if (this.data.offset != null) {\n      // Add the offsets together (this should be able to recurse)\n      const previous = this.data.offset;\n      this.data.offset = context => {\n        return (\n          callIfNecessary(previous, context) +\n          callIfNecessary(offsetGen, context)\n        );\n      };\n    } else {\n      this.data.offset = offsetGen;\n    }\n  }\n  first(first: number) {\n    this.checkLock(\"first\");\n    if (this.data.first != null) {\n      throw new Error(\"Must only set first once\");\n    }\n    this.data.first = first;\n  }\n  last(last: number) {\n    this.checkLock(\"last\");\n    if (this.data.last != null) {\n      throw new Error(\"Must only set last once\");\n    }\n    this.data.last = last;\n  }\n\n  // ----------------------------------------\n\n  isOrderUnique(lock?: boolean = true) {\n    if (lock) {\n      this.lock(\"orderBy\");\n      this.lock(\"orderIsUnique\");\n      return this.compiledData.orderIsUnique;\n    } else {\n      // This is useful inside `beforeLock(\"orderBy\", ...)` calls\n      return this.data.orderIsUnique;\n    }\n  }\n  getTableExpression(): SQL {\n    this.lock(\"from\");\n    if (!this.compiledData.from) {\n      throw new Error(\"No from table has been supplied\");\n    }\n    return this.compiledData.from[0];\n  }\n  getTableAlias(): SQL {\n    this.lock(\"from\");\n    if (!this.compiledData.from) {\n      throw new Error(\"No from table has been supplied\");\n    }\n    return this.compiledData.from[1];\n  }\n  getSelectCursor() {\n    this.lock(\"selectCursor\");\n    return this.compiledData.selectCursor;\n  }\n  getOffset() {\n    this.lock(\"offset\");\n    return this.compiledData.offset || 0;\n  }\n  getFinalLimitAndOffset() {\n    this.lock(\"offset\");\n    this.lock(\"limit\");\n    this.lock(\"first\");\n    this.lock(\"last\");\n    let limit = this.compiledData.limit;\n    let offset = this.compiledData.offset || 0;\n    let flip = false;\n    if (this.compiledData.first != null) {\n      if (limit != null) {\n        limit = Math.min(limit, this.compiledData.first);\n      } else {\n        limit = this.compiledData.first;\n      }\n    }\n    if (this.compiledData.last != null) {\n      if (offset > 0 && limit != null) {\n        throw new Error(\n          \"Issue within pagination, please report your query to graphile-build\"\n        );\n      }\n      if (limit != null) {\n        if (this.compiledData.last < limit) {\n          offset = limit - this.compiledData.last;\n          limit = this.compiledData.last;\n        } else {\n          // no need to change anything\n        }\n      } else if (offset > 0) {\n        throw new Error(\"Cannot combine 'last' and 'offset'\");\n      } else {\n        if (this.compiledData.orderBy.length > 0) {\n          flip = true;\n          limit = this.compiledData.last;\n        } else {\n          throw new Error(\"Cannot do last of an unordered set\");\n        }\n      }\n    }\n    return {\n      limit,\n      offset,\n      flip,\n    };\n  }\n  getFinalOffset() {\n    return this.getFinalLimitAndOffset().offset;\n  }\n  getFinalLimit() {\n    return this.getFinalLimitAndOffset().limit;\n  }\n  getOrderByExpressionsAndDirections() {\n    this.lock(\"orderBy\");\n    return this.compiledData.orderBy;\n  }\n  getSelectFieldsCount() {\n    this.lockEverything();\n    return this.compiledData.select.length;\n  }\n  buildSelectFields() {\n    this.lockEverything();\n    if (this.compiledData.fixedSelectExpression) {\n      return this.compiledData.fixedSelectExpression;\n    }\n    return sql.join(\n      this.compiledData.select.map(\n        ([sqlFragment, alias]) =>\n          sql.fragment`to_json(${sqlFragment}) as ${sql.identifier(alias)}`\n      ),\n      \", \"\n    );\n  }\n  buildSelectJson({\n    addNullCase,\n    addNotDistinctFromNullCase,\n  }: {\n    addNullCase?: boolean,\n    addNotDistinctFromNullCase?: boolean,\n  }) {\n    this.lockEverything();\n    let buildObject = this.compiledData.select.length\n      ? this.jsonbBuildObject(this.compiledData.select)\n      : sql.fragment`to_json(${this.getTableAlias()})`;\n    if (addNotDistinctFromNullCase) {\n      /*\n       * `is null` is not sufficient here because the record might exist but\n       * have null as each of its values; so we use `is not distinct from null`\n       * to assert that the record itself doesn't exist. This is typically used\n       * with column values.\n       */\n      buildObject = sql.fragment`(case when (${this.getTableAlias()} is not distinct from null) then null else ${buildObject} end)`;\n    } else if (addNullCase) {\n      /*\n       * `is null` is probably used here because it's the result of a function;\n       * functions seem to have trouble differentiating between `null::my_type`\n       * and  `(null,null,null)::my_type`, always opting for the latter which\n       * then causes issues with the `GraphQLNonNull`s in the schema.\n       */\n      buildObject = sql.fragment`(case when (${this.getTableAlias()} is null) then null else ${buildObject} end)`;\n    }\n    return buildObject;\n  }\n  buildWhereBoundClause(isLower: boolean) {\n    this.lock(\"whereBound\");\n    const clauses = this.compiledData.whereBound[isLower ? \"lower\" : \"upper\"];\n    if (clauses.length) {\n      return sql.fragment`(${sql.join(clauses, \") and (\")})`;\n    } else {\n      return sql.literal(true);\n    }\n  }\n  buildWhereClause(\n    includeLowerBound: boolean,\n    includeUpperBound: boolean,\n    {\n      addNullCase,\n      addNotDistinctFromNullCase,\n    }: { addNullCase?: boolean, addNotDistinctFromNullCase?: boolean }\n  ) {\n    this.lock(\"where\");\n    const clauses = [\n      /*\n       * Okay... so this is quite interesting. When we're talking about\n       * composite types, `(foo is not null)` and `not (foo is null)` are NOT\n       * equivalent! Here's why:\n       *\n       * `(foo is null)`\n       *   true if every field of the row is null\n       *\n       * `(foo is not null)`\n       *   true if every field of the row is not null\n       *\n       * `not (foo is null)`\n       *   true if there's at least one field that is not null\n       *\n       * `is [not] distinct from null` does differentiate between these cases,\n       * but when a function returns something like `select * from my_table\n       * where false`, it actually returns `(null, null, null)::my_table`,\n       * which will cause issues when we apply the `GraphQLNonNull` constraints\n       * to the results - we want to treat this as null.\n       *\n       * So don't \"simplify\" the line below! We're probably checking if the\n       * result of a function call returning a compound type was indeed null.\n       */\n      ...(addNotDistinctFromNullCase\n        ? [sql.fragment`(${this.getTableAlias()} is distinct from null)`]\n        : addNullCase\n        ? [sql.fragment`not (${this.getTableAlias()} is null)`]\n        : []),\n      ...this.compiledData.where,\n      ...(includeLowerBound ? [this.buildWhereBoundClause(true)] : []),\n      ...(includeUpperBound ? [this.buildWhereBoundClause(false)] : []),\n    ];\n    return clauses.length\n      ? sql.fragment`(${sql.join(clauses, \") and (\")})`\n      : sql.fragment`1 = 1`;\n  }\n  build(\n    options: {\n      asJson?: boolean,\n      asJsonAggregate?: boolean,\n      onlyJsonField?: boolean,\n      addNullCase?: boolean,\n      addNotDistinctFromNullCase?: boolean,\n      useAsterisk?: boolean,\n    } = {}\n  ) {\n    this.lockEverything();\n\n    if (this.compiledData.fixedSelectExpression) {\n      if (Object.keys(options).length > 0) {\n        throw new Error(\n          \"Do not pass options to QueryBuilder.build() when using `buildNamedChildSelecting`\"\n        );\n      }\n    }\n    const {\n      asJson = false,\n      asJsonAggregate = false,\n      onlyJsonField = false,\n      addNullCase = false,\n      addNotDistinctFromNullCase = false,\n      useAsterisk = false,\n    } = options;\n\n    if (onlyJsonField) {\n      return this.buildSelectJson({ addNullCase, addNotDistinctFromNullCase });\n    }\n    const { limit, offset, flip } = this.getFinalLimitAndOffset();\n    const fields =\n      asJson || asJsonAggregate\n        ? sql.fragment`${this.buildSelectJson({\n            addNullCase,\n            addNotDistinctFromNullCase,\n          })} as object`\n        : this.buildSelectFields();\n\n    let fragment = sql.fragment`\\\nselect ${useAsterisk ? sql.fragment`${this.getTableAlias()}.*` : fields}\n${\n  this.compiledData.from &&\n  sql.fragment`from ${this.compiledData.from[0]} as ${this.getTableAlias()}`\n}\n${this.compiledData.join.length && sql.join(this.compiledData.join, \" \")}\nwhere ${this.buildWhereClause(true, true, options)}\n${\n  this.compiledData.orderBy.length\n    ? sql.fragment`order by ${sql.join(\n        this.compiledData.orderBy.map(\n          ([expr, ascending, nullsFirst]) =>\n            sql.fragment`${expr} ${\n              Number(ascending) ^ Number(flip)\n                ? sql.fragment`ASC`\n                : sql.fragment`DESC`\n            }${\n              nullsFirst === true\n                ? sql.fragment` NULLS FIRST`\n                : nullsFirst === false\n                ? sql.fragment` NULLS LAST`\n                : null\n            }`\n        ),\n        \",\"\n      )}`\n    : \"\"\n}\n${isSafeInteger(limit) && sql.fragment`limit ${sql.literal(limit)}`}\n${offset && sql.fragment`offset ${sql.literal(offset)}`}`;\n    if (flip) {\n      const flipAlias = Symbol();\n      fragment = sql.fragment`\\\nwith ${sql.identifier(flipAlias)} as (\n  ${fragment}\n)\nselect *\nfrom ${sql.identifier(flipAlias)}\norder by (row_number() over (partition by 1)) desc`; /* We don't need to factor useAsterisk into this row_number() usage */\n    }\n    if (useAsterisk) {\n      /*\n       * NOTE[useAsterisk/row_number]: since LIMIT/OFFSET is inside this\n       * subquery, row_number() outside of this subquery WON'T include the\n       * offset. We must add it back wherever row_number() is used.\n       */\n      fragment = sql.fragment`select ${fields} from (${fragment}) ${this.getTableAlias()}`;\n    }\n    if (asJsonAggregate) {\n      const aggAlias = Symbol();\n      fragment = sql.fragment`select json_agg(${sql.identifier(\n        aggAlias,\n        \"object\"\n      )}) from (${fragment}) as ${sql.identifier(aggAlias)}`;\n      fragment = sql.fragment`select coalesce((${fragment}), '[]'::json)`;\n    }\n    return fragment;\n  }\n\n  // ----------------------------------------\n\n  _finalize() {\n    this.finalized = true;\n  }\n  lock(type: string) {\n    if (this.locks[type]) return;\n    const context = this.lockContext;\n    const { beforeLock } = this.data;\n    let locks = beforeLock[type];\n    if (locks) {\n      beforeLock[type] = [];\n      for (let i = 0, l = locks.length; i < l; i++) {\n        locks[i]();\n      }\n    }\n    if (type !== \"select\") {\n      this.locks[type] = isDev ? new Error(\"Initally locked here\").stack : true;\n    }\n    if (type === \"cursorComparator\") {\n      // It's meant to be a function\n      this.compiledData[type] = this.data[type];\n    } else if (type === \"whereBound\") {\n      // Handle properties separately\n      this.compiledData[type].lower = callIfNecessaryArray(\n        this.data[type].lower,\n        context\n      );\n      this.compiledData[type].upper = callIfNecessaryArray(\n        this.data[type].upper,\n        context\n      );\n    } else if (type === \"fixedSelectExpression\") {\n      this.compiledData[type] = callIfNecessary(this.data[type], context);\n    } else if (type === \"select\") {\n      /*\n       * NOTICE: locking select can cause additional selects to be added, so the\n       * length of this.data[type] may increase during the operation. This is\n       * why we handle this.locks[type] separately.\n       */\n\n      // Assume that duplicate fields must be identical, don't output the same\n      // key multiple times\n      const seenFields: { [key: string | Symbol]: true } = {};\n      const data = [];\n      const selects = this.data[type];\n\n      // DELIBERATE slow loop, see NOTICE above\n      for (let i = 0; i < selects.length; i++) {\n        const [valueOrGenerator, columnName] = selects[i];\n        if (!seenFields[columnName]) {\n          seenFields[columnName] = true;\n          data.push([callIfNecessary(valueOrGenerator, context), columnName]);\n          locks = beforeLock[type];\n          if (locks) {\n            beforeLock[type] = [];\n            for (let i = 0, l = locks.length; i < l; i++) {\n              locks[i]();\n            }\n          }\n        }\n      }\n      this.locks[type] = isDev ? new Error(\"Initally locked here\").stack : true;\n      this.compiledData[type] = data;\n    } else if (type === \"orderBy\") {\n      this.compiledData[type] = this.data[type].map(([a, b, c]) => [\n        callIfNecessary(a, context),\n        b,\n        c,\n      ]);\n    } else if (type === \"from\") {\n      if (this.data.from) {\n        const f = this.data.from;\n        this.compiledData.from = [callIfNecessary(f[0], context), f[1]];\n      }\n    } else if (type === \"join\" || type === \"where\") {\n      this.compiledData[type] = callIfNecessaryArray(this.data[type], context);\n    } else if (type === \"selectCursor\") {\n      this.compiledData[type] = callIfNecessary(this.data[type], context);\n    } else if (type === \"cursorPrefix\") {\n      this.compiledData[type] = this.data[type];\n    } else if (type === \"orderIsUnique\") {\n      this.compiledData[type] = this.data[type];\n    } else if (type === \"limit\") {\n      this.compiledData[type] = callIfNecessary(this.data[type], context);\n    } else if (type === \"offset\") {\n      this.compiledData[type] = callIfNecessary(this.data[type], context);\n    } else if (type === \"first\") {\n      this.compiledData[type] = this.data[type];\n    } else if (type === \"last\") {\n      this.compiledData[type] = this.data[type];\n    } else {\n      throw new Error(`Wasn't expecting to lock '${type}'`);\n    }\n  }\n  checkLock(type: string) {\n    if (this.locks[type]) {\n      if (typeof this.locks[type] === \"string\") {\n        throw new Error(\n          `'${type}' has already been locked\\n    ` +\n            this.locks[type].replace(/\\n/g, \"\\n    \") +\n            \"\\n\"\n        );\n      }\n      throw new Error(`'${type}' has already been locked`);\n    }\n  }\n  lockEverything() {\n    this._finalize();\n    // We must execute everything after `from` so we have the alias to reference\n    this.lock(\"from\");\n    this.lock(\"join\");\n    this.lock(\"orderBy\");\n    // We must execute where after orderBy because cursor queries require all orderBy columns\n    this.lock(\"cursorComparator\");\n    this.lock(\"whereBound\");\n    this.lock(\"where\");\n    // 'where' -> 'whereBound' can affect 'offset'/'limit'\n    this.lock(\"offset\");\n    this.lock(\"limit\");\n    this.lock(\"first\");\n    this.lock(\"last\");\n    // We must execute select after orderBy otherwise we cannot generate a cursor\n    this.lock(\"fixedSelectExpression\");\n    this.lock(\"selectCursor\");\n    this.lock(\"select\");\n  }\n  /** this method is experimental */\n  buildChild() {\n    const options = { supportsJSONB: this.supportsJSONB };\n    const child = new QueryBuilder(options, this.context, this.rootValue);\n    child.parentQueryBuilder = this;\n    return child;\n  }\n  /** this method is experimental */\n  buildNamedChildSelecting(\n    name: RawAlias,\n    from: SQLGen,\n    selectExpression: SQLGen,\n    alias?: SQLAlias\n  ) {\n    if (this._children.has(name)) {\n      throw new Error(\n        `QueryBuilder already has a child named ${name.toString()}`\n      );\n    }\n    const child = this.buildChild();\n    child.from(from, alias);\n    child.fixedSelectExpression(selectExpression);\n    this._children.set(name, child);\n    return child;\n  }\n  /** this method is experimental */\n  getNamedChild(name: string) {\n    return this._children.get(name);\n  }\n}\n\nexport default QueryBuilder;\n"],"mappings":"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"}