{"version":3,"file":"parseIdentifier.js","names":["parseIdentifier","typeIdentifier","match","Error","namespaceName","entityName"],"sources":["../src/parseIdentifier.js"],"sourcesContent":["export default function parseIdentifier(typeIdentifier) {\n  const match = typeIdentifier.match(\n    /^(?:([a-zA-Z0-9_]+)|\"([^\"]*)\")\\.(?:([a-zA-Z0-9_]+)|\"([^\"]*)\")$/\n  );\n\n  if (!match)\n    throw new Error(\n      `Type identifier '${typeIdentifier}' is of the incorrect form.`\n    );\n\n  return {\n    namespaceName: match[1] || match[2],\n    entityName: match[3] || match[4],\n  };\n}\n"],"mappings":";;;;;;AAAe,SAASA,eAAeA,CAACC,cAAc,EAAE;EACtD,MAAMC,KAAK,GAAGD,cAAc,CAACC,KAAK,CAChC,gEACF,CAAC;EAED,IAAI,CAACA,KAAK,EACR,MAAM,IAAIC,KAAK,CACZ,oBAAmBF,cAAe,6BACrC,CAAC;EAEH,OAAO;IACLG,aAAa,EAAEF,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC;IACnCG,UAAU,EAAEH,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC;EACjC,CAAC;AACH"}