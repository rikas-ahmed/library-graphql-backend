{"version":3,"file":"StandardTypesPlugin.js","names":["_language","require","StandardTypesPlugin","builder","hook","build","stringType","name","description","graphql","GraphQLScalarType","serialize","value","String","parseValue","parseLiteral","ast","kind","Kind","STRING","Error","Cursor","addType","_","newWithHooks","GraphQLNonNull","GraphQLObjectType","GraphQLBoolean","inflection","builtin","wrapDescription","fields","fieldWithHooks","hasNextPage","addDataGenerator","calculateHasNextPage","type","isPageInfoHasNextPageField","hasPreviousPage","calculateHasPreviousPage","isPageInfoHasPreviousPageField","__origin","isPageInfo","exports","default"],"sources":["../../src/plugins/StandardTypesPlugin.js"],"sourcesContent":["// @flow\nimport type { Plugin, Build } from \"../SchemaBuilder\";\nimport { Kind } from \"graphql/language\";\n\nexport default (function StandardTypesPlugin(builder) {\n  // XXX: this should be in an \"init\" plugin, but PgTypesPlugin requires it in build - fix that, then fix this\n  builder.hook(\n    \"build\",\n    (build: Build): Build => {\n      const stringType = (name, description) =>\n        new build.graphql.GraphQLScalarType({\n          name,\n          description,\n          serialize: value => String(value),\n          parseValue: value => String(value),\n          parseLiteral: ast => {\n            if (ast.kind !== Kind.STRING) {\n              throw new Error(\"Can only parse string values\");\n            }\n            return ast.value;\n          },\n        });\n\n      const Cursor = stringType(\n        \"Cursor\",\n        \"A location in a connection that can be used for resuming pagination.\"\n      );\n      build.addType(Cursor, \"graphile-build built-in\");\n      return build;\n    },\n    [\"StandardTypes\"]\n  );\n  builder.hook(\n    \"init\",\n    (_: {}, build) => {\n      const {\n        newWithHooks,\n        graphql: { GraphQLNonNull, GraphQLObjectType, GraphQLBoolean },\n        inflection,\n      } = build;\n      // https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo\n      /* const PageInfo = */\n      newWithHooks(\n        GraphQLObjectType,\n        {\n          name: inflection.builtin(\"PageInfo\"),\n          description: build.wrapDescription(\n            \"Information about pagination in a connection.\",\n            \"type\"\n          ),\n          fields: ({ fieldWithHooks }) => ({\n            hasNextPage: fieldWithHooks(\n              \"hasNextPage\",\n              ({ addDataGenerator }) => {\n                addDataGenerator(() => {\n                  return {\n                    calculateHasNextPage: true,\n                  };\n                });\n                return {\n                  description: build.wrapDescription(\n                    \"When paginating forwards, are there more items?\",\n                    \"field\"\n                  ),\n                  type: new GraphQLNonNull(GraphQLBoolean),\n                };\n              },\n              { isPageInfoHasNextPageField: true }\n            ),\n            hasPreviousPage: fieldWithHooks(\n              \"hasPreviousPage\",\n              ({ addDataGenerator }) => {\n                addDataGenerator(() => {\n                  return {\n                    calculateHasPreviousPage: true,\n                  };\n                });\n                return {\n                  description: build.wrapDescription(\n                    \"When paginating backwards, are there more items?\",\n                    \"field\"\n                  ),\n                  type: new GraphQLNonNull(GraphQLBoolean),\n                };\n              },\n              { isPageInfoHasPreviousPageField: true }\n            ),\n          }),\n        },\n        {\n          __origin: `graphile-build built-in`,\n          isPageInfo: true,\n        }\n      );\n      return _;\n    },\n    [\"StandardTypes\", \"PageInfo\"]\n  );\n}: Plugin);\n"],"mappings":";;;;;;AAEA,IAAAA,SAAA,GAAAC,OAAA;AAAwC,IAEfC,mBAAmB,GAA5B,SAASA,mBAAmBA,CAACC,OAAO,EAAE;EACpD;EACAA,OAAO,CAACC,IAAI,CACV,OAAO,EACNC,KAAY,IAAY;IACvB,MAAMC,UAAU,GAAGA,CAACC,IAAI,EAAEC,WAAW,KACnC,IAAIH,KAAK,CAACI,OAAO,CAACC,iBAAiB,CAAC;MAClCH,IAAI;MACJC,WAAW;MACXG,SAAS,EAAEC,KAAK,IAAIC,MAAM,CAACD,KAAK,CAAC;MACjCE,UAAU,EAAEF,KAAK,IAAIC,MAAM,CAACD,KAAK,CAAC;MAClCG,YAAY,EAAEC,GAAG,IAAI;QACnB,IAAIA,GAAG,CAACC,IAAI,KAAKC,cAAI,CAACC,MAAM,EAAE;UAC5B,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;QACjD;QACA,OAAOJ,GAAG,CAACJ,KAAK;MAClB;IACF,CAAC,CAAC;IAEJ,MAAMS,MAAM,GAAGf,UAAU,CACvB,QAAQ,EACR,sEACF,CAAC;IACDD,KAAK,CAACiB,OAAO,CAACD,MAAM,EAAE,yBAAyB,CAAC;IAChD,OAAOhB,KAAK;EACd,CAAC,EACD,CAAC,eAAe,CAClB,CAAC;EACDF,OAAO,CAACC,IAAI,CACV,MAAM,EACN,CAACmB,CAAK,EAAElB,KAAK,KAAK;IAChB,MAAM;MACJmB,YAAY;MACZf,OAAO,EAAE;QAAEgB,cAAc;QAAEC,iBAAiB;QAAEC;MAAe,CAAC;MAC9DC;IACF,CAAC,GAAGvB,KAAK;IACT;IACA;IACAmB,YAAY,CACVE,iBAAiB,EACjB;MACEnB,IAAI,EAAEqB,UAAU,CAACC,OAAO,CAAC,UAAU,CAAC;MACpCrB,WAAW,EAAEH,KAAK,CAACyB,eAAe,CAChC,+CAA+C,EAC/C,MACF,CAAC;MACDC,MAAM,EAAEA,CAAC;QAAEC;MAAe,CAAC,MAAM;QAC/BC,WAAW,EAAED,cAAc,CACzB,aAAa,EACb,CAAC;UAAEE;QAAiB,CAAC,KAAK;UACxBA,gBAAgB,CAAC,MAAM;YACrB,OAAO;cACLC,oBAAoB,EAAE;YACxB,CAAC;UACH,CAAC,CAAC;UACF,OAAO;YACL3B,WAAW,EAAEH,KAAK,CAACyB,eAAe,CAChC,iDAAiD,EACjD,OACF,CAAC;YACDM,IAAI,EAAE,IAAIX,cAAc,CAACE,cAAc;UACzC,CAAC;QACH,CAAC,EACD;UAAEU,0BAA0B,EAAE;QAAK,CACrC,CAAC;QACDC,eAAe,EAAEN,cAAc,CAC7B,iBAAiB,EACjB,CAAC;UAAEE;QAAiB,CAAC,KAAK;UACxBA,gBAAgB,CAAC,MAAM;YACrB,OAAO;cACLK,wBAAwB,EAAE;YAC5B,CAAC;UACH,CAAC,CAAC;UACF,OAAO;YACL/B,WAAW,EAAEH,KAAK,CAACyB,eAAe,CAChC,kDAAkD,EAClD,OACF,CAAC;YACDM,IAAI,EAAE,IAAIX,cAAc,CAACE,cAAc;UACzC,CAAC;QACH,CAAC,EACD;UAAEa,8BAA8B,EAAE;QAAK,CACzC;MACF,CAAC;IACH,CAAC,EACD;MACEC,QAAQ,EAAG,yBAAwB;MACnCC,UAAU,EAAE;IACd,CACF,CAAC;IACD,OAAOnB,CAAC;EACV,CAAC,EACD,CAAC,eAAe,EAAE,UAAU,CAC9B,CAAC;AACH,CAAC;AAAAoB,OAAA,CAAAC,OAAA,GAAA1C,mBAAA"}