{"version":3,"file":"ClientMutationIdDescriptionPlugin.js","names":["ClientMutationIdDescriptionPlugin","builder","hook","field","build","context","extend","scope","isMutationInput","fieldName","Self","description","wrapDescription","name","isMutationPayload","args","isRootMutation","input","exports","default"],"sources":["../../src/plugins/ClientMutationIdDescriptionPlugin.js"],"sourcesContent":["// @flow\nimport type SchemaBuilder, { Plugin } from \"../SchemaBuilder\";\n\nexport default (function ClientMutationIdDescriptionPlugin(\n  builder: SchemaBuilder\n) {\n  builder.hook(\n    \"GraphQLInputObjectType:fields:field\",\n    (field, build, context) => {\n      const { extend } = build;\n      const {\n        scope: { isMutationInput, fieldName },\n        Self,\n      } = context;\n      if (\n        !isMutationInput ||\n        fieldName !== \"clientMutationId\" ||\n        field.description\n      ) {\n        return field;\n      }\n      return extend(\n        field,\n        {\n          description: build.wrapDescription(\n            \"An arbitrary string value with no semantic meaning. Will be included in the payload verbatim. May be used to track mutations by the client.\",\n            \"field\"\n          ),\n        },\n        `Tweaking '${fieldName}' field in '${Self.name}'`\n      );\n    },\n    [\"ClientMutationIdDescription\"]\n  );\n\n  builder.hook(\n    \"GraphQLObjectType:fields:field\",\n    (field, build, context) => {\n      const { extend } = build;\n      const {\n        scope: { isMutationPayload, fieldName },\n        Self,\n      } = context;\n      if (\n        !isMutationPayload ||\n        fieldName !== \"clientMutationId\" ||\n        field.description\n      ) {\n        return field;\n      }\n      return extend(\n        field,\n        {\n          description: build.wrapDescription(\n            \"The exact same `clientMutationId` that was provided in the mutation input, unchanged and unused. May be used by a client to track mutations.\",\n            \"field\"\n          ),\n        },\n        `Tweaking '${fieldName}' field in '${Self.name}'`\n      );\n    },\n    [\"ClientMutationIdDescription\"]\n  );\n\n  builder.hook(\n    \"GraphQLObjectType:fields:field:args\",\n    (args: { input?: { description?: string, ... }, ... }, build, context) => {\n      const { extend } = build;\n      const {\n        scope: { isRootMutation, fieldName },\n        Self,\n      } = context;\n      if (!isRootMutation || !args.input || args.input.description) {\n        return args;\n      }\n      return {\n        ...args,\n        input: extend(\n          args.input,\n          {\n            description: build.wrapDescription(\n              \"The exclusive input argument for this mutation. An object type, make sure to see documentation for this objectâ€™s fields.\",\n              \"arg\"\n            ),\n          },\n          `Adding a description to input arg for field '${fieldName}' field in '${Self.name}'`\n        ),\n      };\n    },\n    [\"ClientMutationIdDescription\"]\n  );\n}: Plugin);\n"],"mappings":";;;;;;IAGyBA,iCAAiC,GAA1C,SAASA,iCAAiCA,CACxDC,OAAsB,EACtB;EACAA,OAAO,CAACC,IAAI,CACV,qCAAqC,EACrC,CAACC,KAAK,EAAEC,KAAK,EAAEC,OAAO,KAAK;IACzB,MAAM;MAAEC;IAAO,CAAC,GAAGF,KAAK;IACxB,MAAM;MACJG,KAAK,EAAE;QAAEC,eAAe;QAAEC;MAAU,CAAC;MACrCC;IACF,CAAC,GAAGL,OAAO;IACX,IACE,CAACG,eAAe,IAChBC,SAAS,KAAK,kBAAkB,IAChCN,KAAK,CAACQ,WAAW,EACjB;MACA,OAAOR,KAAK;IACd;IACA,OAAOG,MAAM,CACXH,KAAK,EACL;MACEQ,WAAW,EAAEP,KAAK,CAACQ,eAAe,CAChC,6IAA6I,EAC7I,OACF;IACF,CAAC,EACA,aAAYH,SAAU,eAAcC,IAAI,CAACG,IAAK,GACjD,CAAC;EACH,CAAC,EACD,CAAC,6BAA6B,CAChC,CAAC;EAEDZ,OAAO,CAACC,IAAI,CACV,gCAAgC,EAChC,CAACC,KAAK,EAAEC,KAAK,EAAEC,OAAO,KAAK;IACzB,MAAM;MAAEC;IAAO,CAAC,GAAGF,KAAK;IACxB,MAAM;MACJG,KAAK,EAAE;QAAEO,iBAAiB;QAAEL;MAAU,CAAC;MACvCC;IACF,CAAC,GAAGL,OAAO;IACX,IACE,CAACS,iBAAiB,IAClBL,SAAS,KAAK,kBAAkB,IAChCN,KAAK,CAACQ,WAAW,EACjB;MACA,OAAOR,KAAK;IACd;IACA,OAAOG,MAAM,CACXH,KAAK,EACL;MACEQ,WAAW,EAAEP,KAAK,CAACQ,eAAe,CAChC,8IAA8I,EAC9I,OACF;IACF,CAAC,EACA,aAAYH,SAAU,eAAcC,IAAI,CAACG,IAAK,GACjD,CAAC;EACH,CAAC,EACD,CAAC,6BAA6B,CAChC,CAAC;EAEDZ,OAAO,CAACC,IAAI,CACV,qCAAqC,EACrC,CAACa,IAAoD,EAAEX,KAAK,EAAEC,OAAO,KAAK;IACxE,MAAM;MAAEC;IAAO,CAAC,GAAGF,KAAK;IACxB,MAAM;MACJG,KAAK,EAAE;QAAES,cAAc;QAAEP;MAAU,CAAC;MACpCC;IACF,CAAC,GAAGL,OAAO;IACX,IAAI,CAACW,cAAc,IAAI,CAACD,IAAI,CAACE,KAAK,IAAIF,IAAI,CAACE,KAAK,CAACN,WAAW,EAAE;MAC5D,OAAOI,IAAI;IACb;IACA,OAAO;MACL,GAAGA,IAAI;MACPE,KAAK,EAAEX,MAAM,CACXS,IAAI,CAACE,KAAK,EACV;QACEN,WAAW,EAAEP,KAAK,CAACQ,eAAe,CAChC,0HAA0H,EAC1H,KACF;MACF,CAAC,EACA,gDAA+CH,SAAU,eAAcC,IAAI,CAACG,IAAK,GACpF;IACF,CAAC;EACH,CAAC,EACD,CAAC,6BAA6B,CAChC,CAAC;AACH,CAAC;AAAAK,OAAA,CAAAC,OAAA,GAAAnB,iCAAA"}